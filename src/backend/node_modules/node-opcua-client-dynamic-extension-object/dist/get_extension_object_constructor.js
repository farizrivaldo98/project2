"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getExtensionObjectConstructor = void 0;
const node_opcua_data_model_1 = require("node-opcua-data-model");
//
const get_extra_data_type_manager_1 = require("./get_extra_data_type_manager");
const populate_data_type_manager_104_1 = require("./private/populate_data_type_manager_104");
/**
 *
 */
function getExtensionObjectConstructor(session, dataTypeNodeId) {
    return __awaiter(this, void 0, void 0, function* () {
        const extraDataTypeManager = yield (0, get_extra_data_type_manager_1.getExtraDataTypeManager)(session);
        const dataTypeFactory = extraDataTypeManager.getDataTypeFactory(dataTypeNodeId.namespace);
        const structureInfo = dataTypeFactory.getStructureInfoForDataType(dataTypeNodeId);
        if (structureInfo) {
            return structureInfo.constructor;
        }
        const dataValue = yield session.read({
            nodeId: dataTypeNodeId,
            attributeId: node_opcua_data_model_1.AttributeIds.BrowseName
        });
        const browseName = dataValue.value.value;
        yield (0, populate_data_type_manager_104_1.readDataTypeDefinitionAndBuildType)(session, dataTypeNodeId, browseName.name, dataTypeFactory, {});
        return yield extraDataTypeManager.getExtensionObjectConstructorFromDataType(dataTypeNodeId);
    });
}
exports.getExtensionObjectConstructor = getExtensionObjectConstructor;
//# sourceMappingURL=get_extension_object_constructor.js.map