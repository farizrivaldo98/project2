import { DataTypeFactory, FieldCategory, IStructuredTypeSchema, TypeDefinition } from "node-opcua-factory";
import { NodeId } from "node-opcua-nodeid";
import { IBasicSession } from "node-opcua-pseudo-session";
import { DataTypeDefinition } from "node-opcua-types";
export interface CacheForFieldResolution {
    fieldTypeName: string;
    schema: TypeDefinition;
    category: FieldCategory;
    allowSubType?: boolean;
    dataType?: NodeId;
}
export declare function convertDataTypeDefinitionToStructureTypeSchema(session: IBasicSession, dataTypeNodeId: NodeId, name: string, definition: DataTypeDefinition, dataTypeFactory: DataTypeFactory, isAbstract: boolean, cache: {
    [key: string]: CacheForFieldResolution;
}): Promise<IStructuredTypeSchema>;
