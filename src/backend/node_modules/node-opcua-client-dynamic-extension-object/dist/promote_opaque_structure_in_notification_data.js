"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.promoteOpaqueStructureInNotificationData = void 0;
const node_opcua_types_1 = require("node-opcua-types");
const node_opcua_variant_1 = require("node-opcua-variant");
const promote_opaque_structure_1 = require("./promote_opaque_structure");
function promoteOpaqueStructureInNotificationData(session, notificationData) {
    return __awaiter(this, void 0, void 0, function* () {
        const dataValuesToPromote = [];
        for (const notification of notificationData) {
            if (!notification) {
                continue;
            }
            if (notification instanceof node_opcua_types_1.DataChangeNotification) {
                if (notification.monitoredItems) {
                    for (const monitoredItem of notification.monitoredItems) {
                        if (monitoredItem.value.value && monitoredItem.value.value.dataType === node_opcua_variant_1.DataType.ExtensionObject) {
                            dataValuesToPromote.push(monitoredItem.value);
                        }
                    }
                }
            }
            else if (notification instanceof node_opcua_types_1.EventNotificationList) {
                if (notification.events) {
                    for (const events of notification.events) {
                        if (events.eventFields) {
                            // eslint-disable-next-line max-depth
                            for (const eventField of events.eventFields) {
                                // eslint-disable-next-line max-depth
                                if (eventField.dataType === node_opcua_variant_1.DataType.ExtensionObject) {
                                    dataValuesToPromote.push({ value: eventField });
                                }
                            }
                        }
                    }
                }
            }
        }
        yield (0, promote_opaque_structure_1.promoteOpaqueStructure)(session, dataValuesToPromote);
    });
}
exports.promoteOpaqueStructureInNotificationData = promoteOpaqueStructureInNotificationData;
//# sourceMappingURL=promote_opaque_structure_in_notification_data.js.map