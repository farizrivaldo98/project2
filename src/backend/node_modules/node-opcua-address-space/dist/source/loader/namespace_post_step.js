"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.promoteObjectsAndVariables = exports.promoteObjectAndVariablesInNamespace = exports.g_promotableObject = void 0;
const node_opcua_data_model_1 = require("node-opcua-data-model");
const node_opcua_debug_1 = require("node-opcua-debug");
const debugLog = (0, node_opcua_debug_1.make_debugLog)(__filename);
const doDebug = (0, node_opcua_debug_1.checkDebugFlag)(__filename);
exports.g_promotableObject = {};
function parentIsObjectOrVariableType(node) {
    var _a;
    if (node.parent && (node.parent.nodeClass === node_opcua_data_model_1.NodeClass.VariableType || ((_a = node.parent) === null || _a === void 0 ? void 0 : _a.nodeClass) === node_opcua_data_model_1.NodeClass.ObjectType)) {
        return true;
    }
    if (!node.parent) {
        return false;
    }
    return parentIsObjectOrVariableType(node.parent);
}
function promoteObjectAndVariablesInNamespace(namespace) {
    return __awaiter(this, void 0, void 0, function* () {
        const namespaceP = namespace;
        for (const a of namespaceP.nodeIterator()) {
            if (a.nodeClass === node_opcua_data_model_1.NodeClass.Object || a.nodeClass === node_opcua_data_model_1.NodeClass.Variable) {
                // skip object & variable that belong to a ObjectType or VariableType
                const aa = a;
                if (aa.typeDefinition) {
                    const promoter = exports.g_promotableObject[aa.typeDefinition.toString()];
                    if (promoter) {
                        if (promoter.onInstanceOnly && parentIsObjectOrVariableType(aa)) {
                            continue;
                        }
                        const before = a.constructor.name;
                        promoter.promoter(a);
                        const after = a.constructor.name;
                        if (doDebug) {
                            debugLog(`promoting ${a.browseName.toString()} from ${before} to ${after}`);
                        }
                    }
                }
            }
        }
    });
}
exports.promoteObjectAndVariablesInNamespace = promoteObjectAndVariablesInNamespace;
function promoteObjectsAndVariables(addressSpace) {
    return __awaiter(this, void 0, void 0, function* () {
        for (const namespace of addressSpace.getNamespaceArray()) {
            promoteObjectAndVariablesInNamespace(namespace);
        }
    });
}
exports.promoteObjectsAndVariables = promoteObjectsAndVariables;
//# sourceMappingURL=namespace_post_step.js.map